{"version":3,"sources":["redux/reducers/authReducer.js","redux/reducers/searchResultReducer.js","redux/reducers/favoritesReducer.js","redux/store.js","redux/actions/UserAuthentication.js","components/Navbar.js","components/user/UserResume.js","components/centerbar/FavoritesCard.js","redux/actions/Favorites.js","components/centerbar/FavoritesBar.js","components/user/UserProfile.js","components/centerbar/SideBarContainer.js","components/centerbar/SearchBar.js","redux/actions/Search.js","components/search_result_display/SearchResultsCard.js","components/search_result_display/SearchResults.js","components/sidebar/UserMenu.js","components/user/UserDashboard.js","components/user/UserJobs.js","components/user/UserCompanies.js","components/user/UserHomeContainer.js","components/Home.js","components/HomeContainer.js","components/user/UserSignUp.js","components/user/UserLogIn.js","components/About.js","components/Contact.js","components/Footer.js","components/InvalidPath.js","App.js","index.js"],"names":["initialState","loggedIn","currentUser","message","results","favorites","allReducers","combineReducers","auth","state","action","type","payload","search","favorite","sortedFavorites","sort","a","b","job_title","console","log","newFavoritesArray","filter","job","id","store","createStore","compose","applyMiddleware","thunk","logger","window","__REDUX_DEVTOOLS_EXTENSION__","BASE_URL","withRouter","connect","isLoggedIn","errorMessage","props","dispatch","useDispatch","history","useHistory","routeChange","event","path","target","name","push","className","onClick","style","color","fetch","method","then","res","json","data","userLogOut","UserResume","resume","linkedin","github","twitter","website","handleOnChange","setState","value","handleUploadResume","handleChangeLinkedin","handleChangeGithub","handleChangeTwitter","handleChangeWebsite","this","href","class","placeholder","onChange","Component","FavoritesCard","company","job_location","job_url","rel","clear","FavoritesBar","showFavorites","handleOnClick","map","i","clearFavorites","show","UserProfile","username","password","first_name","last_name","email","phone_number","avatar","bio","handleChangePhoto","handleEditUsername","handleEditPassword","handleEditBio","handleEditFirstName","handleEditLastName","handleEditPhone","width","height","borderRadius","alt","src","display","justifyContent","handleEditEmail","SideBarContainer","SearchBar","preventDefault","searchQuery","clearSearch","sortFavorites","SearchResultsCard","useState","likes","setLikes","est_salary","save","searchResults","saveFavorites","jobData","URL","headers","body","JSON","stringify","JobTitle","Company","JobLocation","EstSalary","JobUrl","min_reqs","MinReqs","preferred_reqs","PreferredReqs","responsibilities","Responsibilities","status","length","UserMenu","role","handleGoToProfile","handleGoToResume","handleGoToDashboard","handleGoToUserAppliedJobs","handleGoToUserFavoriteJobs","handleGoToUserCompanies","UserHomeContainer","Home","position","top","UserSignUp","handleOnSubmit","userSignUp","onSubmit","user","logged_in","UserLogIn","userLogIn","About","Contact","full_name","contactForm","cols","rows","Footer","bottom","InvalidPath","App","component","exact","HomeContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84dab320.chunk.js","sourcesContent":["const initialState = {\n    loggedIn: false,\n    currentUser: {},\n    message: \"\"\n}\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"AUTH_SUCCESS\": {\n            return ({\n                ...state,\n                loggedIn: action.payload.loggedIn,\n                currentUser: action.payload.currentUser,\n                message: \"\"\n            });\n        }\n        case \"AUTH_FAIL\": {\n            return ({\n                ...state,\n                loggedIn: false,\n                currentUser: {},\n                message: action.payload.message\n            });\n        }\n        case \"LOGOUT\": {\n            return ({\n                ...state,\n                loggedIn: false,\n                currentUser: {},\n                message: \"\"\n            });\n        }\n        default:{\n            return state;\n        }\n    }\n}","const initialState = {\n    results: []\n};\n\nexport const searchResultReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"SEARCH_SUCCESS\": {\n            return {\n                ...state,\n                results: action.payload.results\n            };\n        }\n\n        // case \"SEARCH_SUCCESS\": {\n        //     const searchedResults = state.results.filter((data) => {\n        //         if (this.state.job_title === \"\" && this.state.company === \"\" && this.state.job_location === \"\") return data; \n        //         else if (\n        //             data.job_title.toLowerCase().includes(this.state.job_title.toLowerCase()) ||\n        //             data.company.toLowerCase().includes(this.state.company.toLowerCase()) ||\n        //             data.job_location.toLowerCase().includes(this.state.search.toLowerCase())\n        //             ){\n        //                 return data;\n        //             }\n        //     })\n            \n            // return ({\n            //     ...state,\n            //     results: [searchedResults],\n            // });\n        // }\n\n\n        case \"CLEAR_SEARCH\": {\n            return {\n                ...state,\n                results: []\n            };\n        }\n\n        // case \"SORT_SEARCH\":\n        //     const sortedSearch = state.results.sort((a, b) => {\n        //         if (a.job_title < b.job_title) {\n        //             return -1;\n        //         }\n        //         else if (a.job_title > b.job_title){\n        //             return 1;\n        //         }\n        //         return 0;\n        //     });\n\n        //     return ({\n        //         favorites: [...sortedSearch],\n        //         message: \"\"\n        //     });\n        default:{\n            return state;\n        }\n    };\n};","const initialState = {\n    favorites: [],\n    message: \"\"\n}\n\nexport const favoritesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"SAVE_FAVORITES\": {\n            return ({\n                favorites: [...state.favorites, action.payload.favorite],\n                message: \"\"\n            });\n        } \n\n\n        case \"DO_NOT_SAVE_FAVORITES\": {\n            return ({\n                favorites: [...state.favorites],\n                message: action.payload.message\n            })\n        }\n\n        // case \"GET_FAVORITES\":\n        //     const FavoritesArray = state.favorites.filter(job => job.id === action.payload.id)\n        //     return ({\n        //         favorites: [...FavoritesArray],\n        //         message: \"\"\n        //     });\n        \n        case \"SHOW_FAVORITES\": {\n            return ({\n                favorites: [...state.favorites],\n                message: \"\"\n            });\n        }\n\n        case \"VIEW_FAVORITES\": {\n            return ({\n                favorites: [...action.payload],\n                message: \"\"\n            });\n        }\n\n        case \"GET_FAVORITES\": {\n            return ({\n                favorites: [...action.payload],\n                message: \"\"\n            });\n        }\n\n        case \"SORT_FAVORITES\": {\n            const sortedFavorites = state.favorites.sort((a, b) => {\n                if (a.job_title < b.job_title) {\n                    return -1;\n                }\n                else if (a.job_title > b.job_title){\n                    return 1;\n                }\n                return 0;\n            });\n\n            return ({\n                favorites: [...sortedFavorites],\n                message: \"\"\n            });\n        }\n\n\n        // case \"CLEAR_FAVORITES\": {\n        //     return ({\n        //         favorites: [],\n        //         message: \"\"\n        //     })\n        // }\n\n        case \"CLEAR_FAVORITES\":\n            console.log(\"You got to favoritesReducer!\")\n            const newFavoritesArray = state.favorites.filter(job => job.id !== action.payload.id)\n            return ({\n                favorites: [...newFavoritesArray],\n                message: \"\"\n            });\n\n        // case \"DELETE_FAVORITES\": {\n        //     const newFavoritesArray = state.favorites.filter(favorite => favorite.id !== action.payload.id)\n        //     return ({\n        //         favorites: [...newFavoritesArray],\n        //         message: \"\"\n        //     });\n        // }\n\n        default: {\n            return state;\n        }\n        \n    }\n}","import{ createStore, applyMiddleware, compose, combineReducers } from \"redux\";\n/*\n    createStore - creates a Redux store that holds the complete state tree of an app. (reducer, preloadedState, enhancer)\n    applyMiddleware - applies middleware, which is the suggested method of extending Redux with custom functionality.\n    compose - able to apply several store enhancers.\n    combineReducers - helper function that turns an object whose values are different reducing functions into a single reducing function that can be passed to createStore.\n*/\nimport thunk from \"redux-thunk\"; // middleware that allows functions to be returned rather than just actions in Redux. Allows delayed actions such as working with promises.\nimport logger from \"redux-logger\"; // logs every action and state change in the dev console.\n\n// reducers\nimport { authReducer } from \"./reducers/authReducer\"; // authentication reducer\nimport { searchResultReducer } from \"./reducers/searchResultReducer\"; // search results reducer\nimport { favoritesReducer } from \"./reducers/favoritesReducer\";  // favorites list reducer\n\nconst allReducers = combineReducers(\n    {\n        auth: authReducer,\n        search: searchResultReducer,\n        favorites: favoritesReducer,\n    });\n\nexport const store = createStore(\n    allReducers,\n    compose(applyMiddleware(thunk, logger), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n)","const BASE_URL = \"http://localhost:3000\";\n\nexport const userSignUp = (user, history) => {\n    return (\n        dispatch => {\n            fetch(BASE_URL + \"/users\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify({ user: user })\n            })\n                .then(res => res.json())\n                .then(data => {\n                    if (data.status >= 400){\n                        dispatch({\n                            type: \"AUTH_FAIL\",\n                            payload: data\n                        });\n                    }\n                    else {\n                        dispatch({\n                            type: \"AUTH_SUCCESS\",\n                            payload: {\n                                loggedIn: data.logged_in, \n                                currentUser: data.user\n                            }\n                        });\n                        history.push(\"/\")\n                    }\n                })\n        }\n    );\n}\n\nexport const userLogIn = (user, history) =>{\n    return (\n        dispatch => {\n            fetch(BASE_URL + \"/sessions\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify({ user: user })\n            })\n                .then(res => res.json())\n                .then(data => {\n                    if (data.status >= 400) {\n                        dispatch({\n                            type: \"AUTH_FAIL\",\n                            payload: data\n                        })\n                    }\n                    else {\n                        dispatch({\n                            type: \"AUTH_SUCCESS\",\n                            payload: {\n                                loggedIn: data.logged_in,\n                                currentUser: data.user\n                            }\n                        });\n                        history.push(\"/\");\n                    }\n                })\n        }\n    )\n}\n\nexport const userLogOut = (history) => {\n    return (\n        dispatch => {\n            fetch(BASE_URL + \"/logout\", {\n                method: \"DELETE\"\n            })\n                .then(res => res.json())\n                .then(data => {\n                    dispatch({\n                        type: \"CLEAR_SEARCH\"\n                    })\n                    dispatch({\n                        type: \"CLEAR_FAVORITES\"\n                    })\n                    dispatch({\n                        type: \"LOGOUT\"\n                    });\n                    history.push(\"/\");\n                });\n        }\n    )\n}","\nimport { connect, useDispatch } from \"react-redux\";\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport { userLogOut } from \"../redux/actions/UserAuthentication\";\n\nconst NavBar = (props) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const routeChange = (event) => {\n        const path = event.target.name;\n        history.push(path);\n    }\n    return (\n        <div>\n            <nav className=\"navbar is-fixed-top is-warning\">\n                <nav className=\"navbar-buttons navbar-start pt-1\" >\n                    <button className=\"button is-primary\" id=\"home\" name=\"/\" onClick={routeChange}>Job Getter</button>\n                    <button className=\"button is-info\" id=\"about\" name=\"/about\" onClick={routeChange}>About</button>\n                    <button className=\"button is-success\" id=\"contact\" name=\"/contact\" onClick={routeChange}>Contact Us</button>\n                </nav>\n                <nav className=\"error-message navbar-end pt-3\" style={{ color:\"red\" }}>\n                    {props.errorMessage}\n                </nav>\n                <nav className=\"signup-login-button navbar-end pt-1\"> {\n                        (props.isLoggedIn) ? (\n                            <div className=\"navbar-logout\">\n                                <button className=\"button is-danger\" id=\"logout\" name=\"/logout\" onClick={() => dispatch(userLogOut(history))}>Log Out</button>\n                            </div>\n                        ) : (\n                            <div className=\"navbar-auth\">\n                                <button className=\"button is-primary\" id=\"login\" name=\"/login\" onClick={routeChange}>Log In</button>\n                                <button className=\"button is-info\" id=\"sigup\" name=\"/signup\" onClick={routeChange}>Sign Up</button>\n                            </div>\n                        )\n                    }\n                </nav>\n            </nav>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return ({\n        isLoggedIn: state.auth.loggedIn,\n        errorMessage: state.auth.message || state.favorites.message\n    })\n}\n\nexport default withRouter(connect(mapStateToProps)(NavBar));","import React, { Component } from \"react\";\n\nclass UserResume extends Component {\n    state = {\n        resume: \"\",\n        linkedin: \"\",\n        github: \"\",\n        twitter: \"\",\n        website: \"\",\n    }\n    \n    handleOnChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleUploadResume = (event) => {\n        console.log(\"you clicked upload resume!\")\n    };\n\n    handleChangeLinkedin = (event) => {\n        console.log(\"you changed Linkedin!\")\n    };\n\n    handleChangeGithub = (event) => {\n        console.log(\"you changed Github!\")\n    };\n\n    handleChangeTwitter = (event) => {\n        console.log(\"you changed Twitter!\")\n    };\n\n    handleChangeWebsite = (event) => {\n        console.log(\"you changed Website!\")\n    };\n\n    render() {\n        return (\n            <div className=\"resume-container\" id=\"resume-container\">\n                <h3>My Resume</h3>\n                <div className=\"resume-upload\" id=\"resume-upload\">\n                    <button className=\"resume-upload\" id=\"resume-upload\" onClick={this.handleUploadResume}>Choose File</button> \n                </div>\n                <div>\n                    <a href=\"/resume\" target=\"_blank\">Current Resume</a>\n                </div>\n                <br/><br/>\n                <div className=\"profesional-links-container\" id=\"professional-links-container\">\n                    <h4>My professional links</h4><br/>\n                    <div className=\"user-linkedin\" id=\"user-linkedin\">\n                        <label class=\"linkedin-label\">Linkedin: </label>\n                        <input class=\"linkedin-input\" name=\"linkedin\" placeholder=\"URL or Username\"  onChange={this.handleChangeLinkedin}></input>\n                    </div><br/>\n                    <div className=\"user-github\" id=\"user-github\">\n                        <label class=\"github-label\">Github: </label>\n                        <input class=\"github-input\" name=\"github\" placeholder=\"URL or Username\" onChange={this.handleChangeGithub}></input>\n                    </div><br/>\n                    <div className=\"user-twitter\" id=\"user-twitter\">\n                        <label class=\"twitter-label\">Twitter: </label>\n                        <input class=\"twitter-input\" name=\"twitter\" placeholder=\"URL or Username\" onChange={this.handleChangeTwitter}></input>\n                    </div><br/>\n                    <div className=\"user-website\" id=\"user-website\">\n                        <label class=\"website-label\">Website: </label>\n                        <input class=\"website-input\" name=\"website\" placeholder=\"URL or Username\" onChange={this.handleChangeWebsite}></input>\n                    </div><br/>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default UserResume","import React from \"react\";\n// import React, { useState } from \"react\";\n\nconst FavoritesCard = (props) => {\n    // const [likes, setLikes] = useState(0) // [0, f(){}]\n    return (\n        <div className=\"favorites-card has-background-light\" key={props.id} id={props.id}> \n            <ul className=\"favorite-jobs-list\" id=\"favorite-jobs-list\">\n                <br/>\n                <h4>{props.job.job_title}</h4>\n                <li>Compnay: {props.job.company}</li>\n                <li>Location: {props.job.job_location}</li>\n                <li><a href={props.job.job_url} target=\"_blank\" rel=\"noreferrer\">Apply</a></li>\n                {/* <button className=\"delete-btn button is-small is-danger\" onClick={props.delete}>X</button> */}\n                <button className=\"delete-btn button is-small is-danger\" onClick={props.clear}>X</button>\n                {/* <button className=\"button is-small is-primary\" onClick={() => setLikes(likes + 1)}>♥︎</button> */}\n                {/* {likes} */}\n            </ul>\n        </div>\n    )\n\n}\n\nexport default FavoritesCard;","const BASE_URL = \"http://localhost:3000/users\"\n\nexport const saveFavorites = (jobData, currentUser) => {\n    // const URL = BASE_URL + `/${currentUser.id}/jobs/${jobData.id}`;\n    const URL = BASE_URL + `/${currentUser.id}/jobs`;\n    console.log(\"You just clicked Favorite button!\")\n        // return (\n        //     dispatch =>\n        //     fetch(URL)\n        //         .then(res => res.json())\n        //         .then(data => {\n        //             dispatch({\n        //                 type: \"SAVE_FAVORITES\",\n        //                 payload: data\n        //             })\n        //         })\n        // );\n\n    return (\n        dispatch => {\n            fetch(URL, {\n                method:\"POST\",\n                headers:{\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify({ \n                    job: {\n                        job_title: jobData.JobTitle,\n                        company: jobData.Company,\n                        job_location: jobData.JobLocation,\n                        est_salary: jobData.EstSalary,\n                        job_url: jobData.JobUrl,\n                        min_reqs: jobData.MinReqs,\n                        preferred_reqs: jobData.PreferredReqs,\n                        responsibilities: jobData.Responsibilities\n                    }   \n                })\n            })\n            .then(res => res.json())\n            .then(data => {\n                if (data.status >= 400){\n                    dispatch({\n                        type: \"DO_NOT_SAVE_FAVORITE\",\n                        payload: data\n                    })\n                }\n                else {    \n                    dispatch({\n                        type: \"SAVE_FAVORITE\",\n                        payload: {\n                            favorite: data\n                        }\n                    })\n                }\n            })\n        }\n    );\n }\n\n\nexport const showFavorites = () => {\n    return(\n        dispatch => \n        dispatch({\n            type: \"SHOW_FAVORITES\"\n        })\n    );\n}\n\nexport const getFavorites = currentUser => {\n    const URL = BASE_URL + `/${currentUser.id}/jobs`\n\n    return (\n        dispatch =>\n        fetch(URL)\n            .then(res => res.json())\n            .then(data => {\n                dispatch({\n                    type: \"GET_FAVORITES\",\n                    payload: data\n                })\n            })\n    );\n}\n\nexport const sortFavorites = () => {\n    return(\n        dispatch => \n        dispatch({\n            type: \"SORT_FAVORITES\"\n        })\n    );\n}\n\nexport const clearFavorites = () => {\n    console.log(\"you clicked X!\")\n    return(\n        dispatch => \n        dispatch({\n            type: \"CLEAR_FAVORITES\"\n        })\n    );\n}\n\nexport const viewFavorites = () => {\n    return(\n        dispatch => \n        dispatch({\n            type: \"VIEW_FAVORITES\"\n        })\n    );\n}\n\n// export const deleteFavorites = (jobData, currentUser) => {\n//     const URL = BASE_URL + `/${currentUser.id}/jobs/${jobData.id}`\n\n//     return (\n//         dispatch => {\n//             fetch(URL, {\n//                 method: \"DELETE\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     \"Accept\": \"application/json\"\n//                 }\n//             })\n//                 .then(res => res.json())\n//                 .then(data => {\n//                     dispatch({\n//                         type: \"DELETE_FAVORITE\",\n//                         payload: jobData\n//                     })\n//                 })\n//                 .catch(err => console.log(err.message))\n//         }\n//     )\n// }\n\nexport const deleteFavorites = () => {\n    return(\n        dispatch => \n        dispatch({\n            type: \"DELETE_FAVORITES\"\n        })\n    );\n}","import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FavoritesCard from \"./FavoritesCard\";\n// import { getFavorites, deleteFavorites } from \"../../redux/actions/Favorites\";\nimport { showFavorites, clearFavorites } from \"../../redux/actions/Favorites\";\n\n\nclass FavoritesBar extends Component {\n    componentDidMount() {\n        this.props.showFavorites(this.props.currentUser)\n    }\n    render() {\n        return (\n            <div>\n                <h3>Your Favorite Jobs ❤️: </h3>\n                <button className=\"button is-warning\" id=\"sort\" onClick={this.handleOnClick}>Sort Favorites</button>\n                {this.props.favorites.map((job, i) => \n                    <FavoritesCard \n                        job={job} \n                        key={i + 1} \n                        id={i + 1} \n                        currentUser={this.props.currentUser} \n                        clear={() => (this.props.clearFavorites(job, this.props.currentUser))} \n                        // delete={() => (this.props.deleteFavorites(job, this.props.currentUser))} \n                        show={() => (this.props.showFavorites(job, this.props.currentUser))} \n                    />)\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return ({\n        favorites: state.favorites.favorites,\n        currentUser: state.auth.currentUser\n    })\n}\n\n// export default connect(mapStateToProps, { getFavorites, deleteFavorites })(FavoritesBar);\nexport default connect(mapStateToProps, { showFavorites, clearFavorites })(FavoritesBar);","import React, { Component } from 'react'; \n// import { userLogIn } from '../../redux/actions/UserAuthentication'; \nimport UserResume from \"./UserResume\";\n\n\nimport FavoritesBar from '../centerbar/FavoritesBar';\n\nclass UserProfile extends Component {\n    state = {\n        username: \"\", \n        password: \"\",\n        first_name: \"\",\n        last_name: \"\", \n        email: \"\",\n        phone_number: \"\",\n        avatar: \"\",\n        bio: \"\",\n    }\n\n    handleOnChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }; \n\n    handleChangePhoto = (event) => {\n        console.log(\"you clicked change photo!\")\n    }\n\n    handleEditUsername = (event) => {\n        console.log(\"you clicked edit username!\")\n    }\n\n    handleEditPassword = (event) => {\n        console.log(\"you clicked edit password!\")\n    }\n\n    handleEditBio = (event) => {\n        console.log(\"you clicked edit bio!\")\n    }\n\n    handleEditFirstName = (event) => {\n        console.log(\"you clicked edit first_name!\")\n    }\n\n    handleEditLastName = (event) => {\n        console.log(\"you clicked edit last_name!\")\n    }\n\n    handleEditPhone = (event) => {\n        console.log(\"you clicked edit phone_number!\")\n    }\n\n\n    render() {\n        return (\n            <div className=\"profile-container\" id=\"profile-container\">\n                    <h4>Welcome, Shasha! :)</h4> \n                    <h4>Did you applied to your favorite jobs today?</h4>\n                    <br/>\n                <div className=\"profile-photo\" id=\"profile-photo\">\n                    <img style={{width: \"160px\", height:\"160px\", borderRadius:\"80px\"}} alt=\"\"\n                    src=\"https://images.unsplash.com/photo-1492106087820-71f1a00d2b11?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1374&q=80\" \n                    /><br/>\n                    <button className=\"edit-photo\" id=\"edit-photo\" onClick={this.handleChangePhoto}>Change Photo</button>\n                </div>\n                <br/>\n                <div>\n                    <div className=\"user-jobs-info\" style={{display: \"flex\", justifyContent:\"space-between\", width:\"50%\"}}>\n                        <h5>Favorites Jobs </h5>\n                        <h5>Jobs Applied </h5>\n                    </div>\n                    <br/><br/>\n                    <div className=\"profile-info\" id=\"profile-info\">\n                        <div className=\"user-profile-info\">\n                            <div className=\"user-profile-username\" style={{display: \"flex\", justifyContent:\"space-between\", width:\"30%\"}}>\n                                <label className=\"user-username\" id=\"profile-username\">Username: </label>\n                                <input className=\"user-username-input\" type=\"text\" name=\"user-username\" value={this.state.username}/>\n                                <button className=\"edit-username-btn\" onClick={this.handleEditUsername}>Edit</button>\n                            </div><br/>\n                            <div className=\"user-profile-username\" style={{display: \"flex\", justifyContent:\"space-between\", width:\"30%\"}}>\n                                <label className=\"profile-password\" id=\"profile-password\">Password: </label>\n                                <input className=\"user-password\" type=\"text\" name=\"user-password\" value={this.state.password}/>\n                                <button className=\"edit-password-btn\" onClick={this.handleEditPassword}>Edit</button>\n                            </div><br/>\n                            <div className=\"user-profile-bio\" style={{display: \"flex\", justifyContent:\"space-between\", width:\"30%\"}}>\n                                <label className=\"profile-bio\" id=\"profile-bio\">Bio: </label>\n                                <input className=\"user-bio\" type=\"text\" name=\"user-bio\" value={this.state.bio}/>\n                                <button className=\"edit-bio-btn\" onClick={this.handleEditBio}>Edit</button>\n                            </div><br/>\n                            <div className=\"user-profile-first-name\" style={{display: \"flex\", justifyContent:\"space-between\", width:\"30%\"}}>\n                                <label className=\"profile-frst-name\" id=\"profile-frst-name\">First Name: </label>\n                                <input className=\"user-first-name\" type=\"text\" name=\"user-first-name\" value={this.state.first_name}/>\n                                <button className=\"edit-first-name-btn\" onClick={this.handleEditFirstName}>Edit</button>\n                            </div><br/>\n                            <div className=\"user-profile-last-name\" style={{display: \"flex\", justifyContent:\"space-between\", width:\"30%\"}}>\n                                <label className=\"profile-last-name\" id=\"profile-last-name\">Last Name: </label>\n                                <input className=\"user-last-name\" type=\"text\" name=\"user-last-name\" value={this.state.last_name}/>\n                                <button className=\"edit-last-name-btn\" onClick={this.handleEditLastName}>Edit</button>\n                            </div><br/>\n                            <div className=\"user-profile-email\" style={{display: \"flex\", justifyContent:\"space-between\", width:\"30%\"}}>\n                                <label className=\"profile-email\" id=\"profile-email\">Email: </label>\n                                <input className=\"user-email\" type=\"text\" name=\"user-email\" value={this.state.email}/>\n                                <button className=\"edit-email-btn\" onClick={this.handleEditEmail}>Edit</button>\n                            </div><br/>\n                            <div className=\"user-profile-phone\" style={{display: \"flex\", justifyContent:\"space-between\", width:\"30%\"}}>\n                                <label className=\"profile-phone\" id=\"profile-phone\">Phone Number: </label>\n                                <input className=\"user-phone\" type=\"text\" name=\"user-phone\" value={this.state.phone_number}/>\n                                <button className=\"edit-phone-btn\" onClick={this.handleEditPhone}>Edit</button>\n                            </div><br/>\n                        </div>\n                        {/* <form>\n                            <label className=\"profile-username\" id=\"profile-username\">Username: </label>\n                            <input className=\"input-username\" type=\"text\" name=\"input-username\" value={this.state.username} onChange={this.handleChangeUsername}/><br/><br/>\n                            <label className=\"profile-password\" id=\"profile-password\">Password: </label>\n                            <input className=\"input-password\" type=\"text\" name=\"input-password\" value={this.state.password} onChange={this.handleChangePassword}/><br/><br/>\n                            <label className=\"profile-bio\" id=\"profile-bio\" onClick={this.handleChangeBio}>Bio: </label>\n                            <input className=\"input-bio\" type=\"text\" name=\"input-bio\" value={this.state.bio} onChange={this.handleChangeBio}/><br/><br/>\n                            <label className=\"profile-frst-name\" id=\"profile-frst-name\">First Name: </label>\n                            <input className=\"input-first-name\" type=\"text\" name=\"input-first-name\" value={this.state.first_name} onChange={this.handleChangeFirstName}/><br/><br/>\n                            <label className=\"profile-last-name\" id=\"profile-last-name\" onClick={this.handleChangeLastName}>Last Name: </label>\n                            <input className=\"input-last-name\" type=\"text\" name=\"input-last-name\" value={this.state.last_name} onChange={this.handleChangeLastName}/><br/><br/>   \n                            <label className=\"profile-email\" id=\"profile-email\" onClick={this.handleEditEmail}>Email: </label>\n                            <input className=\"input-email\" type=\"text\" name=\"input-email\" value={this.state.email} onChange={this.handleChangeEmail}/><br/><br/>\n                            <label className=\"profile-phone\" id=\"profile-phone\" onClick={this.handleChangePhone}>Phone Number: </label>\n                            <input className=\"input-phone\" type=\"text\" name=\"input-phone\" value={this.state.phone_number} onChange={this.handleChangePhone}/><br/><br/>\n                            <button className=\"save-profile\" id=\"save-profile\" onClick={this.handleSaveProfile}>Save Profile</button>\n                        </form> */}\n                    </div>\n                </div> \n                <br/>\n                <div>\n                    <UserResume />\n                    <FavoritesBar />\n                </div> \n            </div>\n        )\n    }\n}\n\n\nexport default UserProfile","import React from \"react\";\n\nimport UserProfile from \"../user/UserProfile\";\n// import SearchBar from \"./SearchBar\";\n// import FavoritesBar from \"./FavoritesBar\";\n// import SearchResults from \"../search_result_display/SearchResults\";\n\nconst SideBarContainer = () => {\n    return (\n        <div className=\"column-side-bar has-background-light\" >\n            <UserProfile />\n            {/* <SearchBar /> */}\n            {/* <FavoritesBar /> */}\n            {/* <SearchResults /> */}\n        </div>\n    )\n}\n\nexport default SideBarContainer;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { searchQuery, clearSearch } from \"../../redux/actions/Search\";\n// import { searchQuery, clearSearch, sortSearch } from \"../../redux/actions/Search\";\nimport { sortFavorites } from \"../../redux/actions/Favorites\";\n\nclass SearchBar extends Component {\n    state = {\n        job_title: \"\",\n        company: \"\",\n        job_location: \"\"\n    }\n\n    handleOnChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleOnClick = (event) => {\n        if (event.target.id === \"submit\"){\n            event.preventDefault();\n            this.props.searchQuery(this.state);\n        }\n        else if (event.target.id === \"reset\"){\n            this.setState({\n                job_title: \"\",\n                company: \"\",\n                job_location: \"\"\n                }\n            )   \n            this.props.clearSearch();\n        }\n        else if (event.target.id === \"sort\"){\n            event.preventDefault();\n            this.props.sortFavorites();\n            // this.props.sortSearch();\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"search-bar has-text-white\">\n                <form className=\"search-form\">\n                    <label className=\"label\"><h3>Search for Top Tech Jobs: </h3></label>\n                    <br/>\n                    <label className=\"label\"><h4>Job Title Search: </h4></label>\n                    <div className=\"control\">\n                        <input className=\"input\" type=\"text\" name=\"job_title\" placeholder=\"Enter Job Title\" value={this.state.job_title} onChange={this.handleOnChange} />\n                    </div>\n                    <br/>\n                    <label className=\"label\"><h4>Company Search: </h4></label>\n                    <div className=\"control\">\n                        <input className=\"input\" type=\"text\" name=\"company\" placeholder=\"Enter Company Name\" value={this.state.company} onChange={this.handleOnChange} />\n                    </div>\n                    <br/>\n                    <label className=\"label\"><h4>Location Search: </h4></label>\n                    <div className=\"control\">\n                        <select name=\"location\" value={this.state.job_location} onChange={this.handleOnChange}>\n                            <option value=\"all\">ALL</option>\n                            <option value=\"r\">Remote</option> \n                            <option value=\"ny\">New York, NY</option>\n                            <option value=\"sf\">San Francisco, CA</option>\n                            <option value=\"mv\">Mountain View, CA</option>\n                            <option value=\"pa\">Palo Alto, CA</option>\n                            <option value=\"cu\">Cupertino, CA</option>\n                            <option value=\"la\">Los Angelos, CA</option>\n                            <option value=\"se\">Seattle, WA</option>\n                            <option value=\"ch\">Chicago, IL</option>\n                            <option value=\"bo\">Boston, MA</option>\n                            <option value=\"au\">Austin, TX</option>\n                        </select>\n                    </div>\n                    <br/>\n                    <div className=\"buttons\">\n                        <button className=\"button is-primary\" id=\"submit\" onClick={this.handleOnClick}>Submit</button>\n                        <button className=\"button is-danger\" type=\"reset\" id=\"reset\" onClick={this.handleOnClick}>Reset</button>\n                        <button className=\"button is-warning\" id=\"sort-search\" onClick={this.handleOnClick}>Sort Searches</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, { searchQuery, clearSearch, sortFavorites })(SearchBar);\n// export default connect(null, { searchQuery, clearSearch, sortSearch })(SearchBar);","// const BASE_URL = \"http://localhost:3000/users\"\nconst URL = \"http://localhost:3000/search\"\n\n// export const searchQuery = (currentUser) => {\nexport const searchQuery = () => {\n    // const url = new URL(\"http://localhost:3000/jobs#search\");\n    // URL.search = new URLSearchParams(queries);\n    // const URL = BASE_URL + `/${currentUser.id}/jobs`;\n    return (\n        dispatch => {\n            fetch(URL)\n                .then(res => res.json())\n                .then(data => {\n                    dispatch({\n                        type: \"SEARCH_SUCCESS\",\n                        payload: {\n                            results: data\n                        }\n                    })\n                });\n        }\n    );\n}\n\nexport const clearSearch = () => {\n    return (\n        dispatch => {\n            dispatch({\n                type: \"CLEAR_SEARCH\"\n            }\n        )\n        }\n    );\n}\n\n// export const sortSearch = () => {\n//     return (\n//         dispatch => {\n//             dispatch({\n//                 type: \"SORT_SEARCH\"\n//             })\n//         }\n//     );\n// }","import React, {useState} from \"react\";\n\nconst SearchResultsCard = (props) => {\n    const [likes, setLikes] = useState(0) // [0, f(){}]\n    return (\n        <div className=\"col content has-background-light\" id=\"display-results-card\" key={props.id} >\n            <ul class=\"job-list\" id=\"job-list\">\n                <br/>\n                <h4>{props.job.job_title}</h4>\n                <li><small>Job id: {props.id}</small></li>\n                <li>Company: {props.job.company}</li>\n                <li>Location: {props.job.job_location}</li>\n                <li>Est. Salaray: {props.job.est_salary}</li>\n                <li><a href={props.job.job_url} >APPLY</a></li>\n                {/* <button className=\"view-btn button is-primary\" onClick={props.show}>View</button> */}\n                <button className=\"favorite-btn button is-primary\" onClick={props.save}>Favorite</button>\n                <button className=\"button is-small is-primary\" onClick={() => setLikes(likes + 1)}>❤️</button>\n                {likes}\n                <br/>\n            </ul>\n        </div>\n    )\n}\n\nexport default SearchResultsCard;\n\n// class SearchResultsCard extends Component {\n\n//     handleOnChange = (event) => {\n//         this.setState({\n//             [event.target.name]: event.target.value\n//         });\n//     };\n\n//     handleOnClick = (event) => {\n//         if (event.target.id === \"view\"){\n//             <jobCard />\n//         }\n//         else if (event.target.id === \"favorite\"){\n//             this.props.saveFavorites();\n//         }\n//     }\n\n// render() {\n//     return (\n//         <div className=\"column content has-background-light\" id=\"display-results-card\" key={props.id} >\n//             <ul>\n//                 <br/>\n//                 <h4>{props.job.job_title}</h4>\n//                 <li>Company: {props.job.company}</li>\n//                 <li>Location: {props.job.job_location}</li>\n//                 <li>Estimated Salaray: {props.job.est_salary}</li>\n//                 <li><a href={props.job.job_url}>Click Here to Apply</a></li>\n//                 <button className=\"view-btn button is-primary\" onClick={props.view}>View</button>\n//                 <button className=\"favorite-btn button is-primary\" id=\"favorite\" onClick={props.saveFavorites}>Favorite</button>\n//                 <br/>\n//             </ul>\n//         </div>\n//     )\n// }\n\n// export default SearchResultsCard;\n\n","import { connect } from \"react-redux\";\n\nimport SearchResultsCard from \"./SearchResultsCard\";\nimport { saveFavorites } from \"../../redux/actions/Favorites\";\n\nconst SearchResults = (props) => {\n    return (\n        <div className=\"col search-results\" id=\"display-results-container\">\n            <h3>Search Results: </h3>\n            <div className=\"sort-filter-search\" style={{display:\"flex\", justifyContent:\"space-between\"}}>\n                <button id='sort-results' class=\"btn btn-block\" type=\"submit\" name=\"sort-results\" value=\"Sort by Date Posted\">Sort by Date Posted </button>\n                <label id=\"filter-by-category\">Filter by 🗂: </label>\n                <select type=\"select\" id=\"filter-title\" name=\"filterTitle\">\n                    <option value=\"All Levels\">All Levels</option>\n                    <option value=\"Junior\">Junior</option>\n                    <option value=\"Mid-Level\">Mid-Level</option>\n                    <option value=\"Senior\">Senior</option>\n                    <option value=\"Executive\">Executive</option>\n                </select>\n                <label id=\"search-by-keyword\">Search by 🔎: </label>\n                <input id=\"search-input\" type=\"text\" name=\"keyword\" placeholder=\"Enter keyword...\"/>\n            </div>\n            {(props.searchResults.length !== 0) ? (\n                props.searchResults.map((job, i) => \n                    <SearchResultsCard \n                        job={job} \n                        key={i + 1} \n                        id={i + 1} \n                        currentUser={props.currentUser} \n                        save={() => (props.saveFavorites(job, props.currentUser))} \n                        // get={() => (props.getFavorites(job, props.currentUser))} \n                    />\n                )\n            ) \n                : \n                \"\"\n            }\n        </div>\n    )\n}\n\n//             {(props.searchResults.length !== 0) ? (\n//                 props.searchResults.map((job, i) => \n//                     <SearchResultsCard \n//                         job={job} \n//                         key={i + 1} \n//                         id={i + 1} \n//                         currentUser={props.currentUser} \n//                         save={() => (props.saveFavorites(job, props.currentUser))} \n//                     />\n//                 )\n//             ) \n//                 : \n//                 \"\"\n//             }\n//         </div>\n//     )\n// }\n\nconst mapStateToProps = state => {\n    return ({\n        searchResults: state.search.results,\n        currentUser: state.auth.currentUser\n    })\n}\n\nexport default connect(mapStateToProps, { saveFavorites })(SearchResults);","import React, { Component } from \"react\"; \nimport { Route, Link } from \"react-router-dom\";\nimport UserProfile from \"../user/UserProfile\";\nimport UserDashboard from \"../user/UserDashboard\";\nimport UserResume from \"../user/UserResume\";\nimport UserJobs from \"../user/UserJobs\";\nimport UserCompanies from \"../user/UserCompanies\";\n\nclass UserMenu extends Component {\n\n    render() {\n        return (\n            <div className=\"col sidebar-user-menu\">\n                <div className=\"company-sidebar-display\">\n                <a href=\"/home\" role=\"button\" id=\"home-tab\" className=\"home-tab\">\n                        <div class=\"home-logo\">\n                        </div>\n                        <div>\n                            <div class=\"menu-item\">Job Getter</div>\n                        </div>\n                    </a>\n                </div>\n                <br/>\n                <div class=\"user-avatar\">\n                    <a href=\"/profile\" role=\"button\" id=\"profile-tab\" className=\"profile-tab\">\n                        <div class=\"profile-photo-username\" id=\"profile-photo-username\">\n                            <img style={{width: \"50px\", height:\"50px\", borderRadius:\"50px\"}} alt=\"\"\n                            src=\"https://images.unsplash.com/photo-1492106087820-71f1a00d2b11?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1374&q=80\" \n                            />\n                            <h5>Username</h5>\n                        </div>\n                    </a>\n                </div><br/>\n                <div class=\"user-profile\">\n                    <a href=\"/profile\" role=\"button\" id=\"profile-tab\" className=\"profile-tab\" onClick={this.handleGoToProfile}>\n                        <div class=\"profile-logo\">\n                        </div>\n                        <div>\n                            <div class=\"menu-item\">Profile</div>\n                        </div>\n                    </a>\n                </div><br/>\n                <div class=\"user-resume\">\n                    <a href=\"/resume\" role=\"button\" id=\"resume-tab\" className=\"resume-tab\" onClick={this.handleGoToResume}>\n                        <div class=\"resume-logo\">\n                        </div>\n                        <div>\n                            <div class=\"menu-item\">Resume</div>\n                        </div>\n                    </a>\n                </div><br/>\n                <div className=\"user-dashboard\">\n                    <a href=\"/dashboard\" role=\"button\" id=\"dashboard-tab\" className=\"dashboard-tab\" onClick={this.handleGoToDashboard}>\n                        <div class=\"dashboard-logo\">\n                        </div>\n                        <div>\n                            <div class=\"menu-item\">Dashboard</div>\n                        </div>\n                    </a>\n                </div><br/>\n                <div className=\"user-applied-jobs\">\n                    <a href=\"/user-applied-jobs\" role=\"button\" id=\"user-applied-jobs-tab\" className=\"user-applied-jobs-tab\" onClick={this.handleGoToUserAppliedJobs}>\n                        <div class=\"user-applied-jobs-logo\">\n                        </div>\n                        <div>\n                            <div class=\"menu-item\">Job Application Tracker</div>\n                        </div>\n                    </a>\n                </div><br/>\n                <div className=\"/user-favorite-jobs\">\n                    <a href=\"user-favorite-jobs\" role=\"button\" id=\"user-favorite-jobs-tab\" className=\"user-favorite-jobs-tab\" onClick={this.handleGoToUserFavoriteJobs}>\n                        <div class=\"user-favorite-jobs-logo\">\n                        </div>\n                        <div>\n                            <div class=\"menu-item\">My Favorite Jobs</div>\n                        </div>\n                    </a>\n                </div><br/>\n                <div className=\"user-companies\">\n                    <a href=\"/user-companies\" role=\"button\" id=\"user-companies-tab\" className=\"user-companies-tab\" onClick={this.handleGoToUserCompanies}>\n                        <div class=\"user-companies-logo\">\n                        </div>\n                        <div>\n                            <div class=\"menu-item\">My Companies</div>\n                        </div>\n                    </a>\n                </div>\n                {/* <div class=\"user-forum\">\n                    <a href=\"user-forum\" role=\"button\" id=\"user-forum-tab\" className=\"user-forum-tab\">\n                        <div class=\"user-forum-logo\">\n                        </div>\n                        <div>\n                            <div class=\"menu-item\">Forum</div>\n                        </div>\n                    </a>\n                </div> */}\n            </div>\n        )\n    }\n}\n\nexport default UserMenu","import React, { Component } from \"react\";\n\nclass UserDashboard extends Component {\n    render() {\n        return (\n            <div>\n                <h3>My Dashboard</h3>\n                // add # of jobs favorated, # of jobs applied this week, this month, this year\n                // add analytics like bar/line graph to show \n                // add overall #s & compare with other job seekers \n                // add to do list\n                // add notifications from companies\n                // congratulation message if the user had received a job offer \n            </div>\n        )\n    }\n}\n\nexport default UserDashboard","import React, { Component } from \"react\";\nimport FavoritesBar from '../centerbar/FavoritesBar';\n\nclass UserJobs extends Component {\n    render() {\n        return (\n            <div className=\"user-jobs\" id=\"user-jobs\">\n                <div className=\"user-jobs-applied\" id=\"user-jobs-applied\"> \n                    <h4>Jobs Applied</h4>\n                    // render/map all jobs applied by user, ordered by most recent first.\n                </div>\n                <div className=\"user-favorite-jobs\" id=\"user-favorite-jobs\"> \n                    <h4>Favorite Jobs</h4>\n                    <FavoritesBar />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserJobs","import React, { Component } from \"react\";\n\nclass UserCompanies extends Component {\n    render() {\n        return (\n            <div className=\"user-companies-container\">\n                <div className=\"user-companies\">\n                    <h3>My Companies</h3>\n                </div>\n                <div className=\"user-favorite-companies\">\n                    <h3>My Favorite Companies</h3>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserCompanies","import React from \"react\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport SideBarContainer from \"../centerbar/SideBarContainer\";\nimport SearchBar from \"../centerbar/SearchBar\";\nimport SearchResults from \"../search_result_display/SearchResults\";\n// import UserProfile from \"./UserProfile\";\nimport UserMenu from \"../sidebar/UserMenu\";\n\nconst UserHomeContainer = () => {\n    return (\n        <div className=\"column-home-container\" id=\"user-home\">\n            <UserMenu />\n            <SideBarContainer />\n            <SearchBar />\n            <SearchResults />\n        </div>\n    )\n}\n\nexport default UserHomeContainer;","import React from \"react\";\n\nconst Home = () => {\n    return (\n        <div className=\"has-text-white has-text-centered\" id=\"home\" style={{position: \"fixed\", top: \"180px\"}}>\n            <br />\n            <label className=\"tag label is-large title\"><h2>👩🏻‍💻 Welcome to Job Getter! 🚀</h2></label>\n            <br />\n            <h4>👀 Look for your dream tech job NOW!!! 💻 </h4>\n        </div>\n    )\n}\n\nexport default Home;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport UserHomeContainer from \"./user/UserHomeContainer\";\nimport Home from \"./Home\";\n\nconst HomeContainer = (props) => {\n    return (\n        <>\n            {props.isLoggedIn ? \n                <UserHomeContainer /> \n                : \n                <Home />\n            }\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return ({\n        isLoggedIn: state.auth.loggedIn\n    })\n}\n\nexport default connect(mapStateToProps)(HomeContainer);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { userSignUp } from \"../../redux/actions/UserAuthentication\";\n\nclass UserSignUp extends Component {\n    state = {\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        username: \"\",\n        password: \"\",\n    };\n\n    handleOnChange = event => {\n        this.setState({\n                [event.target.name]: event.target.value\n            }\n        );\n    };\n\n    handleOnSubmit = event => {\n        event.preventDefault();\n        this.props.userSignUp(this.state, this.props.history);\n    }\n    render() {\n        return (\n            <div className=\"sign-up\" style={{position: \"fixed\", top: \"180px\"}}>\n                <h2>Sign Up for Job Getter!</h2>\n                <br/>\n                <form onSubmit={this.handleOnSubmit}>\n                    <label className=\"label has-text-white\"><strong>First Name: </strong></label>\n                    <input className=\"input\" type=\"text\" name=\"first_name\" value={this.state.first_name} onChange={this.handleOnChange}/>\n                    <br/><br/>\n                    <label className=\"label has-text-white\"><strong>Last Name: </strong></label>\n                    <input className=\"input\" type=\"text\" name=\"last_name\" value={this.state.last_name} onChange={this.handleOnChange}/>\n                    <br/><br/>\n                    <label className=\"label has-text-white\"><strong>Email: </strong></label>\n                    <input className=\"input\" type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleOnChange}/>\n                    <br/><br/>\n                    <label className=\"label has-text-white\"><strong>Username: </strong></label>\n                    <input className=\"input\" type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleOnChange}/>\n                    <br/><br/>\n                    <label className=\"label has-text-white\"><strong>Password: </strong></label>\n                    <input className=\"input\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleOnChange}/>\n                    <br/>\n                    <br/>\n                    <button className=\"button is-link\" type=\"submit\">Sign Up</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, { userSignUp })(UserSignUp);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { userLogIn } from \"../../redux/actions/UserAuthentication\";\n\nclass UserLogIn extends Component {   \n    state = {\n        username: \"\",\n        password: \"\",\n    };\n\n    handleOnChange = event => {\n        this.setState({\n                [event.target.name]: event.target.value\n            }\n        );\n    };\n\n    handleOnSubmit = event => {\n        event.preventDefault();\n        this.props.userLogIn(this.state, this.props.history)\n    }\n    render() {\n        return (\n            <div className=\"log-in\" style={{position: \"fixed\", top: \"180px\"}}>\n                <h2>Log in to Job Getter!</h2>\n                <br/>\n                <form onSubmit={this.handleOnSubmit}>\n                    <label className=\"label has-text-white\"><strong>Username: </strong></label>\n                    <input className=\"input\" type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleOnChange} />\n                    <br/><br/>\n                    <label className=\"label has-text-white\"><strong>Password: </strong></label>\n                    <input className=\"input\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleOnChange} />\n                    <br/><br/>\n                    <button className=\"button is-link\" type=\"submit\">Log In</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, { userLogIn })(UserLogIn);","import React from \"react\";\n\nconst About = () => {\n    return (\n        <div className=\"has-text-white has-text-centered\" id=\"about\" style={{position: \"fixed\", top: \"180px\"}}>\n            <br/>\n            <label className=\"tag label is-large title has-text-centered\"><h2>About Job Getter 📖</h2></label>\n            <br/>\n            <p>Job Getter helps students get their dream jobs from top tech companies.</p>\n        </div>\n    )\n}\n\nexport default About;","import React, { Component } from \"react\";\n// import ContactForm from \"./ContactForm\";\n\n// class Contact extends Component {\n//     render() {\n//         return (\n//             <div className=\"contact has-text-white has-text-centered\" id=\"contact\">\n//                 <ContactForm />\n//             </div>\n//         )\n//     }\n// }\n\nclass Contact extends Component {\n    state = {\n        full_name: \"\", \n        phone_number: \"\", \n        email: \"\", \n        message: \"\"\n    }; \n\n    handleOnChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleOnSubmit = event => {\n        event.preventDefault(); \n        this.props.contactForm(this.state); \n    }\n\n    render() {\n        return (\n        <div className=\"contact\" id=\"contact\" style={{position: \"fixed\", top: \"180px\"}}>\n            <h2>Contact Us 💌 </h2>\n            <br/>\n            <form onSubmit={this.handleOnSubmit}>\n                <label className=\"label has-text-white\"><strong>Full Name: </strong></label>\n                <input className=\"name-input\" id=\"name-input\" type=\"text\" name=\"full_name\" value={this.state.full_name} onChange={this.handleOnChange}/>\n                <br/><br/>\n                <label className=\"label has-text-white\"><strong>Phone #: </strong></label>\n                <input className=\"phone-input\" id=\"phone-input\" type=\"text\" name=\"phone_number\" value={this.state.phone_number} onChange={this.handleOnChange}/>\n                <br/><br/>\n                <label className=\"label has-text-white\"><strong>Email: </strong></label>\n                <input className=\"email-input\" id=\"email-input\" type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleOnChange}/>\n                <br/><br/>\n                <label className=\"label has-text-white\"><strong>Message: </strong></label>\n                <textarea className=\"message-input\" id=\"message-input\" type=\"textarea\" name=\"message\" cols=\"50\" rows=\"10\"\n                placeholder=\"Enter your message...\" value={this.state.message} onChange={this.handleOnChange}></textarea>\n                <br/>\n                <br/>\n                <span className=\"contact-button\">\n                    <button type=\"submit\" className=\"button is-link\" onClick={this.handleOnSubmit}>Send!</button>\n                </span>\n            </form>\n        </div>\n    )}\n}\n\nexport default Contact;\n","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <div className=\"branding\" style={{position: \"fixed\", bottom: \"0px\"}}>\n            <p>&copy; 2021 <strong>Job Getter, Inc.</strong> All rights reserved.</p>\n        </div>\n    );\n  }\n  export default Footer;","import React from \"react\";\n\nconst InvalidPath = () => {\n    return (\n        <div className=\"has-text-white has-text-centered\">\n            <label className=\"tag label is-large title\"><h2>Invalid Path!!</h2></label>\n            <br />\n            <h4>Oops! It seems like we don't have that page.</h4><br/>\n            <p>Try navigating using the buttons in the navigation bar or the links on the menu on the left of your home page.</p>\n        </div>\n    )\n}\n\nexport default InvalidPath","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport NavBar from \"./components/Navbar\";\nimport HomeContainer from \"./components/HomeContainer\";\nimport UserSignUp from \"./components/user/UserSignUp\";\nimport UserLogIn from \"./components/user/UserLogIn\";\nimport About from \"./components/About\";\nimport Contact from \"./components/Contact\";\nimport Footer from \"./components/Footer\";\nimport InvalidPath from \"./components/InvalidPath\";\n// import background from \"./images/background1.png\";\n\n// style={{ backgroundImage: `url(${background})`, backgroundRepeat: 'no-repeat', backgroundPosition: 'center', }}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n         <Switch>\n          <Route path=\"/signup\" component={UserSignUp} />\n          <Route path=\"/login\" component={UserLogIn} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route exact path=\"/\" component={HomeContainer} />\n          <Route>\n            <InvalidPath />\n          </Route>\n         </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\"; \nimport { store } from \"./redux/store\"; \nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}